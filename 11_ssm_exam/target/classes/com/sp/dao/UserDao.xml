<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
namespace：命名空间，通常为"包名+SQL映射文件名"
-->
<mapper namespace="com.sp.dao.UserDao">


    <!--登录-->
    <select id="login" resultType="User">
        select * from t_user where name=#{name} and password=#{password}
    </select>

    
    <select id="getList" resultType="User">
        select * from t_user
    </select>


    <select id="getById" resultType="User">
        select * from t_user where id=#{id}
    </select>


    <update id="edit" parameterType="User">
        update t_user
        <set>
            <if test="name!=null and name!=''">
                name=#{name},
            </if>

            <if test="age!=null and age!=''">
                age=#{age},
            </if>

            <if test="password!=null and password!=''">
                password=#{password},
            </if>
        </set>
        where id=#{id}
    </update>


    <insert id="add" parameterType="User">
        insert into t_user(name,age,password) values(#{name},#{age},#{password})
    </insert>


    <!--删除用户-->
    <delete id="remove">
        delete from t_user where id=#{id}
    </delete>
    <!--用户删除了，书籍当然也不存在，然后根据用户的id，删除书籍-->
    <delete id="removeUserAndBook">
        delete from t_book where user_id=#{id}
    </delete>
    

    <!--查询所有用户，用于显示在书籍的添加页面-->
    <select id="getAllUser" resultType="User">
        select * from t_user
    </select>


    <!--根据作者id，查询作者所有的书籍-->
    <select id="getBookListByUserId" resultMap="User_Book">
        SELECT
            u.*,
            b.id AS bookId,
            b.name AS bookName,
            b.price
        FROM
            t_user u,
            t_book b
        WHERE
            u.id = b.user_id
        AND u.id = #{id}
    </select>

    <resultMap id="User_Book" type="User">
        <id property="id" column="id" />
        <result property="name" column="name" />
        <result property="age" column="age" />
        <result property="password" column="password" />
        
        <collection property="bookList" ofType="Book">
            <id property="id" column="bookId" />
            <result property="bookName" column="bookName" />
            <result property="price" column="price" />
        </collection>
    </resultMap>



</mapper>