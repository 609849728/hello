[main]
#使用数据库进行验证和授权
myRealm=com.sp.realm.MyRealm
securityManager.realms=$myRealm

#下列语法都是死的语法，也就是规定的必须这么写，jsp可以自己指定
#当访问需要登录才能访问的页面，但是又没有登录的情况下，跳转到login.jsp，（authc表示登录）
authc.loginUrl=/login.jsp
#当访问需要角色的页面，但是又不拥有这个角色的情况下，跳转到noroles.jsp
roles.unauthorizedUrl=/noRoles.jsp
#当访问需要权限的页面，但是又不拥有这个权限的情况下，跳转到noperms.jsp
perms.unauthorizedUrl=/noPerms.jsp


#users，roles和perms都通过前面知识点的数据库配置了，所以这里是空的
[users]


#urls用来指定哪些资源需要什么对应的权限才能使用
[urls]

#如果访问/doLogout地址就会进行退出行为，退出行为：logout(必须这么写，规定的语法)，会清除Session
/doLogout=logout

#login.jsp,noroles.jsp,noperms.jsp 可以匿名访问，匿名：anon(必须这么写，规定的语法)，也就是在没有登录，没有登录就代表没有进行任何的权限下访问
/login.jsp=anon
/noroles.jsp=anon
/noperms.jsp=anon

# 访问listProduct.jsp需要登录后才能查看
/listProduct.jsp=authc

# 访问deleteProduct.jsp不仅需要登录，而且必须是productManager这个角色才可以访问
#[此处的值并不是规定写死的，而是要按照数据库中的角色名称来写，才会起作用，例如数据库里的角色名称为productManager，这里也就写成productManager]
/deleteProduct.jsp=authc,roles[productManager]

#访问deleteOrder.jsp不仅需要登录，而且要拥有deleteOrder权限才可以访问
/deleteOrder.jsp=authc,perms[deleteOrder]