<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util.xsd">




    <!-- 退出(注销)过滤器 -->
    <bean id="logoutFilter" class="org.apache.shiro.web.filter.authc.LogoutFilter">
        <!--退出后，重定向到/toLogin-->
        <property name="redirectUrl" value="/toLogin" />
    </bean>


    <!-- 密码匹配器,交给shrio效验 -->
    <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="2"/>
        <property name="storedCredentialsHexEncoded" value="true"/>
    </bean>


    <!--配置自定义的Realm-->
    <bean id="myRealm" class="com.sp.realm.MyRealm">
        <!--注入密码匹配器-->
        <property name="credentialsMatcher" ref="credentialsMatcher" />
    </bean>


    <!-- 配置shiro的安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!--注入Realm-->
        <property name="realm" ref="myRealm" />
    </bean>


    <!-- 设置成全局，相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager" />
        <property name="arguments" ref="securityManager" />
    </bean>


    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />


    <bean id="urlPathMatchingFilter" class="com.sp.filter.URLPathMatchingFilter" />


    <!-- 配置shiro过滤器工厂类，id=shiroFilter必须要和我们在web.xml中配置的shiro过滤器一致 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- 注入shiro安全管理器 -->
        <property name="securityManager" ref="securityManager" />
        <!-- 配置登录地址，没登录的情况下跳转至/login -->
        <property name="loginUrl" value="/toLogin" />
        <!-- 配置权限地址，你没有该角色没有该权限的情况下，会跳转到/unauthorized -->
        <property name="unauthorizedUrl" value="/unauthorized" />

        <!-- 退出 -->
        <property name="filters">
            <util:map>
                <!--退出的过滤器-->
                <entry key="logout" value-ref="logoutFilter" />

                <!--访问url的过滤器-->
                <entry key="url" value-ref="urlPathMatchingFilter" />
            </util:map>
        </property>

        <!-- 权限配置 -->
        <property name="filterChainDefinitions">
            <value>
                <!-- anon表示匿名，不需要登录，更不需要角色和权限 -->
                /=anon
                /kaptcha=anon
                /toLogin=anon
                /unauthorized=anon
                /EmpController/login=anon

                /index=authc
                /application/**=authc

                <!--配置不拦截的静态资源-->
                /js/**=anon
                /layui/**=anon
                /lib/**=anon
                /static/**=anon

                /logout=logout
                <!--所有的请求/**(除去配置的静态资源请求或请求地址为anon的请求)都要通过登录authc验证,如果未登录则跳到/login -->
                /** = authc
                /** = url
            </value>
        </property>
    </bean>


</beans>